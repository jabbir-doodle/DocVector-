name: Test and Lint

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
      fail-fast: false

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
        pip install pytest pytest-cov black isort mypy types-all
        
    - name: Check formatting with black
      run: |
        black . --check || (echo "::error::Code formatting check failed. Run 'black .' to fix formatting issues." && exit 1)
        
    - name: Check imports with isort
      run: |
        isort . --check-only --profile black || (echo "::error::Import sorting check failed. Run 'isort .' to fix import issues." && exit 1)
        
    - name: Type checking with mypy
      run: |
        mypy src/docvector || (echo "::error::Type checking failed. Fix type issues in the code." && exit 1)
        
    - name: Run tests with coverage
      run: |
        pytest tests/ --cov=src/docvector --cov-report=xml --cov-report=term-missing || (echo "::error::Tests failed. Check the test output for details." && exit 1)
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false
        token: ${{ secrets.CODECOV_TOKEN }} 